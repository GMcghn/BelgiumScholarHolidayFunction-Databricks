# Databricks notebook source
# Prophet - add regressor Belgian scholar holidays
def is_be_scholar_holiday(ds):
  """
  Returns if the input date is a belgian scholar holiday or not based on the country's holiday policy. 
  Created as a regressor for time-series analysis with Facebook prophet library.

  Args: a date

  Returns: Boolean if scholar holiday or not
  """
  from datetime import datetime, timedelta
  import holidays
  import pandas as pd
  
  date = pd.to_datetime(ds)
  # date = ds
  
  holidays_belgium = holidays.Belgium(years= [x for x in range(2016,2025)])
  Allerheiligen = [pd.to_datetime(x) for x,y in holidays_belgium.items() if y == 'Allerheiligen']
  Kerstmis = [pd.to_datetime(x) for x,y in holidays_belgium.items() if y == 'Kerstmis']
  Pasen = [pd.to_datetime(x) for x,y in holidays_belgium.items() if y == 'Pasen']
  
  # summer holidays
  if date.month *100 + date.day >= 701  and date.month *100 + date.day < 901:
    return 1
  
  #Allerheiligen
  for y in Allerheiligen:
    if y.dayofweek == 6:    
      if y + timedelta(days= -1) <= date and date <= y + timedelta(days= 7):
        return 1
        
    elif y.dayofweek == 0:
      if y + timedelta(days= -2) <= date and date <= y + timedelta(days= 6):
        return 1 
    
    elif y.dayofweek == 1:    
      if y + timedelta(days= -3) <= date and date <= y + timedelta(days= 5):
        return 1
    
    elif y.dayofweek == 2:    
      if y + timedelta(days= -4) <= date and date <= y + timedelta(days= 4):
        return 1
    
    elif y.dayofweek == 3:    
      if y + timedelta(days= -5) <= date and date <= y + timedelta(days= 3):
        return 1
    
    elif y.dayofweek == 4:    
      if y + timedelta(days= -6) <= date and date <= y + timedelta(days= 2):
        return 1
    
    elif y.dayofweek == 5:    
      if y + timedelta(days= -7) <= date and date <= y + timedelta(days= 1):
        return 1 
      
  #Kerstmis
  for y in Kerstmis:
    if y.dayofweek == 5:    
      if y  <= date and date <= y + timedelta(days= 15):
        return 1
        
    elif y.dayofweek == 6:
      if y + timedelta(days= -1) <= date and date <= y + timedelta(days= 14):
        return 1 
    
    elif y.dayofweek == 0:    
      if y + timedelta(days= -2) <= date and date <= y + timedelta(days= 13):
        return 1
    
    elif y.dayofweek == 1:    
      if y + timedelta(days= -3) <= date and date <= y + timedelta(days= 12):
        return 1
    
    elif y.dayofweek == 2:    
      if y + timedelta(days= -4) <= date and date <= y + timedelta(days= 11):
        return 1
    
    elif y.dayofweek == 3:    
      if y + timedelta(days= -5) <= date and date <= y + timedelta(days= 10):
        return 1
    
    elif y.dayofweek == 4:    
      if y + timedelta(days= -6) <= date and date <= y + timedelta(days= 9):
        return 1 
  
  #Pasen
  for y in Pasen:
    
    if y.month*100 + y.day < 407:
      if y + timedelta(days= -1) <= date and date <= y + timedelta(days= 14):
        return 1
        
    elif y.month*100 + y.day >= 407 and y.month*100 + y.day < 414:
      if y + timedelta(days= -8) <= date and date <= y + timedelta(days= 7):
        return 1
        
    elif y.month*100 + y.day >= 414:
      if y + timedelta(days= -15) <= date and date <= y + timedelta(days= 1):
        return 1
  
  #Carnaval
  for y in Pasen:
    if y + timedelta(days= -50) <= date and date <= y + timedelta(days= -42):
        return 1
      
      
  return 0


